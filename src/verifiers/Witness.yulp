import "./Transaction.yulp"
import "./Deposit.yulp"

/// @title Witness verifier
object "VerifyWitness" is "Deposit", "Transaction" {
  code {
    /// @notice Verify a witness proof.
    /// @param transactionProof Memory offset to start of transaction proof.
    /// @param inputProofs Memory offset of start of input proofs.
    function verifyWitness(transactionProof, inputProofs) {
      let witness := TransactionProof.witness(transactionProof, 0)
      let leaf := TransactionProof.transaction.position(transactionProof)
      let input := TransactionLeaf.inputs.position(leaf)

      switch Signature.type(witness)

      // Witness is a signature
      case WitnessTypes.Signature {
        switch Input.type(input)

        // Deposit: recovered address must match input owner
        case InputType.Deposit {
          require(eq(
            ecrecover(transactionId(transactionProof), witness),
            Deposit.owner(inputProofs)
          ), error"witness-signature")
        }

        // Root: recovered address must match block producer of input
        case InputType.Root {
          require(eq(
            ecrecover(transactionId(transactionProof), witness),
            TransactionProof.blockProducer(inputProofs)
          ), error"witness-signature")
        }

        // Transfer: recovered address must match input owner
        default {
          require(eq(
            ecrecover(transactionId(transactionProof), witness),
            UTXO.owner(inputProofs)
          ), error"witness-signature")
        }
      }

      // Witness is a caller (i.e. contract authorized a transaction)
      case WitnessTypes.Caller {
        require(eq(
          witnessAt(Caller.owner(witness), Caller.blockNumber(witness)),
          transactionId(transactionProof)
        ), error"witness-caller")
      }

      // Witness is address of producer (implied by producer of block)
      case WitnessTypes.Producer {
        require(eq(Producer.hash(witness), transactionId(transactionProof)),
          error"witness-producer")
      }

      default { require(0, error"witness-type") }
    }
  }
}
